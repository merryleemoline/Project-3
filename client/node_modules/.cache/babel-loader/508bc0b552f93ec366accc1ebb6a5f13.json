{"ast":null,"code":"import _slicedToArray from \"c:\\\\Users\\\\merry\\\\Documents\\\\UCI-Code-HW\\\\TurnThisIn\\\\Project-3\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"c:\\\\Users\\\\merry\\\\Documents\\\\UCI-Code-HW\\\\TurnThisIn\\\\Project-3\\\\client\\\\src\\\\pages\\\\ViewJobEntry.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport API from \"../utils/API\";\nimport JobCard from \"./JobCard\";\n\nfunction ViewJobs(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      job = _useState2[0],\n      setJob = _useState2[1]; // Add code to get the book with an _id equal to the id in the route param\n  // e.g. http://localhost:3000/books/:id\n  // The book id for this route can be accessed using props.match.params.id\n\n\n  useEffect(function () {\n    API.getJob(props.match.params.id).then(function (res) {\n      return setJob(res.data);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }, []);\n  var colStyle = {\n    maxWidth: \"22rem\"\n  };\n  return React.createElement(MDBRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(JobCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }));\n}\n\nexport default ViewJobs;","map":{"version":3,"sources":["c:/Users/merry/Documents/UCI-Code-HW/TurnThisIn/Project-3/client/src/pages/ViewJobEntry.js"],"names":["React","useEffect","useState","Link","API","JobCard","ViewJobs","props","job","setJob","getJob","match","params","id","then","res","data","catch","err","console","log","colStyle","maxWidth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA,kBACDL,QAAQ,CAAC,EAAD,CADP;AAAA;AAAA,MAChBM,GADgB;AAAA,MACXC,MADW,kBAGzB;AACA;AACA;;;AACER,EAAAA,SAAS,CAAC,YAAM;AACdG,IAAAA,GAAG,CAACM,MAAJ,CAAWH,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAA9B,EACGC,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIN,MAAM,CAACM,GAAG,CAACC,IAAL,CAAV;AAAA,KADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,KAFZ;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,MAAMG,QAAQ,GAAG;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAjB;AAEA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKC;;AAEH,eAAehB,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport API from \"../utils/API\";\r\nimport JobCard from \"./JobCard\";\r\n\r\nfunction ViewJobs(props) {\r\n  const [job, setJob] = useState({})\r\n\r\n// Add code to get the book with an _id equal to the id in the route param\r\n// e.g. http://localhost:3000/books/:id\r\n// The book id for this route can be accessed using props.match.params.id\r\n  useEffect(() => {\r\n    API.getJob(props.match.params.id)\r\n      .then(res => setJob(res.data ))\r\n      .catch(err => console.log(err));\r\n  }, [])\r\n\r\n  const colStyle = { maxWidth: \"22rem\" };\r\n\r\n  return (\r\n    <MDBRow>\r\n      <JobCard />\r\n    </MDBRow>\r\n    )\r\n  }\r\n\r\nexport default ViewJobs;"]},"metadata":{},"sourceType":"module"}